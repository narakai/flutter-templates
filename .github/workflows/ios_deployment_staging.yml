name: ios-deployment-staging
on:
  # Trigger the workflow on push action
  # Remove pull_request after testing
  pull_request:
    types: [ opened, synchronize, edited, reopened ]
  push:
    branches:
      - develop

defaults:
  run:
    working-directory: ./.template

jobs:
  build_ios:
    name: Build Flutter (iOS)
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Bundle install
      run: cd ./ios && bundle install
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
        flutter-version: '2.10.3'
    - run: flutter pub get

    - run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Pod install
      run: cd ./ios && pod install
    - name: Match AppStore
      run: cd ./ios && bundle exec fastlane sync_appstore_staging_signing
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    - name: Deploy to TestFlight
      run: |
        cd ./ios && bundle exec fastlane build_and_upload_testflight_app
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
